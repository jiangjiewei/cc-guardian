#In [1]:

import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline

# Make sure that caffe is on the python path:
caffe_root = '/home/jie/caffe/caffe-master/'  # this file is expected to be in {caffe_root}/examples
import sys
sys.path.insert(0, caffe_root + 'python')

import caffe

plt.rcParams['figure.figsize'] = (10, 10)
plt.rcParams['image.interpolation'] = 'nearest'
plt.rcParams['image.cmap'] = 'gray'



#In [2]:


caffe.set_mode_cpu()
net = caffe.Net(caffe_root + 'myself/python_okornotok/okornotok_result/deploy.prototxt',
                caffe_root + 'myself/python_okornotok/okornotok_result/caffe_alexnet_train_iter_800.caffemodel',
                caffe.TEST)

# input preprocessing: 'data' is the name of the input blob == net.inputs[0]
transformer = caffe.io.Transformer({'data': net.blobs['data'].data.shape})
transformer.set_transpose('data', (2,0,1))
transformer.set_mean('data', np.load(caffe_root + 'myself/python_okornotok/okornotok_result/mnist_train_lmdb_mean.npy').mean(1).mean(1)) # mean pixel
transformer.set_raw_scale('data', 255)  # the reference model operates on images in [0,255] range instead of [0,1]
transformer.set_channel_swap('data', (2,1,0))  # the reference model has channels in BGR order instead of RGB


#one
#In [3]:


net.blobs['data'].reshape(424,3,227,227)
net.blobs['data'].data[...] = transformer.preprocess('data', caffe.io.load_image(caffe_root + 'myself/python_okornotok/okornotok/test/20120228-1019-12764.jpg'))
out = net.forward()
print("Predicted class is #{}.".format(out['prob'].argmax()))




#all 
#In [4]


net.blobs['data'].reshape(424,3,227,227)
test_dir='/home/jie/caffe/caffe-master/myself/python_okornotok/okornotok/train/ok'
import os
for root,dirs,files in os.walk(test_dir):
    for i in xrange (0,files.__len__()):
        sf=os.path.join(root,files[i])
        print (files[i]),
        net.blobs['data'].data[...] = transformer.preprocess('data', caffe.io.load_image(sf))
        out = net.forward()
        print("Predicted class is #{}.".format(out['prob'].argmax()))




net.blobs['data'].reshape(1,3,227,227)
test_dir='/home/jie/caffe/caffe-master/myself/python_okornotok/okornotok5-5/other-5/test'
import os
for root,dirs,files in os.walk(test_dir):
    for i in xrange (0,files.__len__()):
        sf=os.path.join(root,files[i])
        print (files[i]),
        net.blobs['data'].data[...] = transformer.preprocess('data', caffe.io.load_image(sf))
        out = net.forward()
        print("Predicted class is #{}.".format(out['prob'].argmax()))





#output.txt
#In [5]

import sys
output=open(r'output.txt','w')
sys.stdout=output
net.blobs['data'].reshape(1,3,227,227)
test_dir='/home/jie/caffe/caffe-master/creatdata/bigorsmall/train/ok'
import os
for root,dirs,files in os.walk(test_dir):
    for i in xrange (0,files.__len__()):
        sf=os.path.join(root,files[i])
        print (files[i]),
        net.blobs['data'].data[...] = transformer.preprocess('data', caffe.io.load_image(sf))
        out = net.forward()
        print("Predicted class is #{}.".format(out['prob'].argmax()))
sys.stdout=sys.__stdout__
output.close()




